// –ó–∞–¥–∞—á–∞ 10.3: CommentsList - —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

import axios from 'axios';
// TODO: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ useSelector –∏ useDispatch
import { useSelector, useDispatch } from 'react-redux';

// TODO: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ action creator removeComment
import { removeComment } from '../store/slices/commentsSlice.js';

// TODO: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ API –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
import { API } from '../api/config.js';

import './CommentsList.css';

export default function CommentsList() {
  // TODO: –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ Redux
  const comments = useSelector(state => state.comments.items)

  // TODO: –ü–æ–ª—É—á–∏—Ç–µ dispatch
  const dispatch = useDispatch();

  const handleDelete = async (id) => {
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?')) {
      return;
    }

    try {
      // TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å DELETE –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ axios –Ω–∞ ${API}/comments/${id}
      await axios.delete(`${API}/comments/${id}`)
      
      // TODO: –£–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–∑ Redux
      dispatch(removeComment(id)); // action creator removeComment(id)
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã. –£–∂–µ –≤—Å—ë —Å–¥–µ–ª–∞–Ω–æ. –ù–µ —Ç—Ä–æ–≥–∞–π—Ç–µ.
  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  return (
    <div className="comments-list-container">
      <h3>üìù –í—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({comments.length})</h3>
      
      {comments.length === 0 ? (
        <p className="no-comments">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
      ) : (
        <div className="comments-list">
          {comments.map(comment => (
            <div key={comment.id} className="comment-item">
              <div className="comment-header">
                <span className="comment-author">{comment.author}</span>
                <span className="comment-date">{formatDate(comment.created_at)}</span>
              </div>
              <p className="comment-text">{comment.text}</p>
              <button
                onClick={() => handleDelete(comment.id)}
                className="delete-button"
              >
                üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

